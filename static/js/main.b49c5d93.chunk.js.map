{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Steps","props","analyzedInstructions","map","x","name","steps","i","step","key","Ingredients","extendedIngredients","id","originalString","Radar","title","data","options","size","scales","captions","reduce","a","b","meta","color","Math","min","value","MacroBreakdown","caloricBreakdown","nutrients","percentProtein","percentFat","percentCarbs","carbs","find","amount","fiber","sugar","fat","saturated","saturatedPercent","scale","max","scaled","summaryExcludes","Set","Nutrition","excludes","nutrition","filter","has","sort","localeCompare","vitamins","includes","percentOfDailyNeeds","minerals","className","RecipeCard","useState","setData","useEffect","get","then","body","to","src","image","creditsText","Recipe","match","params","recipes","Array","from","length","_","floor","random","additionalTags","veryPopular","veryHealthy","top5Nutrients","slice","console","log","style","padding","href","sourceUrl","servings","readyInMinutes","preparationMinutes","cookingMinutes","dishTypes","concat","diets","replace","ScrollToTop","pathname","useLocation","window","scrollTo","App","exact","path","component","Boolean","location","hostname","process","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b49c5d93.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Link, Switch, Route, useLocation } from 'react-router-dom';\nimport { get } from 'superagent';\nimport RadarChart from 'react-svg-radar-chart';\nimport 'react-svg-radar-chart/build/css/index.css';\n\n\nfunction Steps(props) {\n  return <div>\n    <h2>Preparation</h2>\n    {\n      props.analyzedInstructions.map(x =>\n        <div>\n          <b>{x.name}</b>\n          <ul>\n            {x.steps.map( ({step}, i) => <li key={i}>{step}</li> )}\n          </ul>\n        </div>\n      )\n    }\n  </div>\n}\n\nfunction Ingredients (props) {\n  return (\n    <div>\n      <h2>Ingredients</h2>\n      <ul>\n        {props.extendedIngredients.map( (x, id) =>\n          <li key={id}>{x.originalString} </li>\n        )}\n      </ul>\n    </div>\n  );\n}\n\n\nconst Radar = ({title, data}) => (\n  <RadarChart\n    options = {{size:'33%', scales:5}}\n    title = {title}\n    captions = {\n      data\n        .map(x=>x.title)\n        .reduce((a,b)=> ({[b]:b, ...a}), {})\n    }\n    data = {[{\n      meta: {color: 'orange'},\n      data: data\n        .reduce((a,b) => ({[b.title]: Math.min(1,b.value/100), ...a}), {})}]\n    } />\n);\n\n\nfunction MacroBreakdown({caloricBreakdown, nutrients}) {\n  const {percentProtein, percentFat, percentCarbs} = caloricBreakdown\n\n  const carbs = nutrients.find(x => x.title == 'Net Carbohydrates') || {amount: 0};\n  const fiber = nutrients.find(x => x.title == 'Fiber') || {amount: 0};\n  const sugar = nutrients.find(x => x.title == 'Sugar') || {amount: 0};\n  const protein = nutrients.find(x => x.title == 'Protein') || {amount: 0};\n  const fat = nutrients.find(x => x.title == 'Fat') || {amount: 0};\n  const saturated = nutrients.find(x => x.title == 'Saturated Fat') || {amount: 0};\n\n\n  const saturatedPercent = percentFat * saturated.amount / fat.amount;\n  const unsaturatedPercent = percentFat * (1 - saturated.amount / fat.amount);\n  const fiberPercent = percentCarbs * fiber.amount / carbs.amount\n  const sugarPercent = percentCarbs * sugar.amount  / carbs.amount\n  const complexPercent = percentCarbs * (carbs.amount - sugar.amount)  / carbs.amount\n\n  const data = [\n    {title: \"Unsaturated Fat\", value: unsaturatedPercent, color: \"black\"},\n    {title: \"Saturated Fat\", value: saturatedPercent, color: \"darkgrey\"},\n    {title: \"Protein\", value: percentProtein, color: \"blue\"},\n    {title: \"Fiber\", value: fiberPercent, color: \"green\"},\n    {title: \"Sugar\", value: sugarPercent, color: \"red\"},\n    {title: \"Complex Carbs\", value: complexPercent, color: \"orange\"},\n  ];\n\n  const scale = Math.max(...data.map(x=>x.value));\n  const scaled = data.map(x=>({...x, value: x.value/scale * 100}));\n\n  return <Radar title=\"Macros\" data={scaled} />\n}\n\nconst summaryExcludes = new Set([\n  'Net Carbohydrates',\n  'Cholesterol',\n]);\n\nfunction Nutrition (props) {\n  const excludes = new Set([\n    'Carbohydrates',\n    'Net Carbohydrates',\n    'Fat',\n    'Sugar',\n    'Fiber',\n    'Calories',\n    'Saturated Fat',\n    'Cholesterol',\n    'Protein',\n    'Folate'\n  ]);\n\n  const nutrients = props\n    .nutrition\n    .nutrients\n    .filter(x=>!excludes.has(x.title))\n    .sort((a,b) => a.title.localeCompare(b.title) )\n\n  const vitamins = nutrients\n    .filter(x => x.title.includes('Vitamin'))\n    .map(x=>({...x, value: Math.min(100, x.percentOfDailyNeeds)}));\n\n  const minerals = nutrients\n    .filter(x => !x.title.includes('Vitamin') )\n    .map(x=>({...x, value: Math.min(100, x.percentOfDailyNeeds)}));\n\n  return (\n    <div className=\"Nutrition\">\n      <div>\n        <h2>Vitamins RDA %</h2>\n        <Radar title=\"Vitamins\" data={vitamins} />\n      </div>\n      <div>\n        <h2>Minerals RDA %</h2>\n        <Radar title=\"Minerals\" data={minerals} />\n      </div>\n      <div>\n        <h2>Macros</h2>\n        <MacroBreakdown {...props.nutrition} />\n      </div>\n    </div>\n  );\n}\n\nfunction RecipeCard({name}) {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    get(`./data/${name}.json`).then(x=>setData(x.body));\n  }, [name]);\n\n  if (!data) return null;\n\n  return (\n      <div className=\"card\" >\n        <Link to={name} className=\"image\">\n          <img src={data.image} />\n        </Link>\n\n        <div className=\"meta\">\n          <div className=\"source\">{\n            data.creditsText\n          }</div>\n          <div className=\"title\">{data.title}</div>\n        </div>\n\n\n      </div>\n  );\n}\n\nfunction Recipe({match}) {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    get(`./data/${match.params.id}.json`).then(x=>setData(x.body));\n  }, [match.params.id]);\n\n  if (!data)\n    return null;\n\n  const recipes = Array\n    .from({length:3}, (_, i) => Math.floor(Math.random() * 1000))\n    .map(i => `keto-${i}`);\n\n\n\n  const additionalTags = [\n    data.veryPopular && 'popular',\n    data.veryHealthy && 'very healthy',\n  ].filter(x=>x);\n\n  const top5Nutrients = data\n    .nutrition\n    .nutrients\n    .filter( x => !summaryExcludes.has(x.title))\n    .filter( x => x.percentOfDailyNeeds > 100)\n    .sort( (a,b) => b.percentOfDailyNeeds - a.percentOfDailyNeeds)\n    .slice(0, 5);\n\n    console.log(data);\n  return (\n    <>\n      <div className=\"header\">\n        <div  style={{padding: '1em'}}>\n          <img src={data.image}/>\n        </div>\n        <div>\n          <h1>{data.title}</h1>\n          <ul className=\"summaryList\">\n            <li> <a href={data.sourceUrl}>{data.sourceUrl}</a> </li>\n            <li> Servings: <b>{data.servings}</b></li>\n            <li> Ready in: <b>{data.readyInMinutes}</b>min </li>\n            {data.preparationMinutes &&\n              <li> Preparation time: <b>{data.preparationMinutes}</b>min </li> }\n            {data.cookingMinutes &&\n              <li> Cooking time: <b>{data.cookingMinutes}</b>min </li> }\n            <li> Tags: {\n              data.dishTypes\n                .concat(data.diets)\n                .concat(additionalTags)\n                .map( x => <span key={x} className=\"tag\">{x} </span> )\n            }</li>\n\n            <li>High in: {top5Nutrients.map(x => <span key={x.title} className=\"tag\">{x.title.replace('Vitamin ', '')} </span> )} </li>\n\n          </ul>\n        </div>\n      </div>\n      <Nutrition {...data} />\n      <Ingredients {...data} />\n      <div>\n        <Steps {...data} />\n      </div>\n\n      <div className=\"similar\">\n        <h1> Similar Recipes </h1>\n        <div className=\"grid\">{\n          recipes.map( (name, key) => <RecipeCard name={name} key={key} />)\n        }</div>\n      </div>\n\n    </>\n  );\n}\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\nfunction App() {\n  const recipes = Array\n    .from({length:20}, () => Math.floor(Math.random() * 1000))\n    .map(i => `keto-${i}`);\n\n\n  return (\n    <>\n      <ScrollToTop/>\n      <div className=\"Navigation\">\n        <Link to=\"/\"> FoodWall </Link>\n      </div>\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"banner\">\n            <div className=\"tagline\">\n              <p>\n                Be the Hero of the next Dinner\n              </p>\n              <p>\n                Discover new Recipes and their Nutrition Value\n              </p>\n            </div>\n            <div className=\"copic\">\n              <img src=\"images/platter-1932466_1920.jpg\" />\n            </div>\n          </div>\n{/*\n          <div className=\"section videos\">\n            <h2>Featured Videos</h2>\n            <div className=\"grid\">\n              <iframe width=\"300\" height=\"300\"  src=\"https://www.youtube.com/embed/zrRDnLJdjmQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <iframe width=\"300\" height=\"300\"  src=\"https://www.youtube.com/embed/zrRDnLJdjmQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <iframe width=\"300\" height=\"300\"  src=\"https://www.youtube.com/embed/zrRDnLJdjmQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n              <iframe width=\"300\" height=\"300\"  src=\"https://www.youtube.com/embed/zrRDnLJdjmQ\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n            </div>\n          </div>\n*/}\n          <div className=\"section\">\n            <h2> Recipe Wall </h2>\n            <div className=\"grid\">\n              {\n              recipes.map( (name, key) => <RecipeCard name={name} key={key} />)\n            }</div>\n\n          </div>\n\n        </Route>\n        <Route path=\"/:id\" component={Recipe}  />\n      </Switch>\n    </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nconsole.log(process.env.PUBLIC_URL);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL} >\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}